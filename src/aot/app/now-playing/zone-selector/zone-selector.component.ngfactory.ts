/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from '../../../../app/now-playing/zone-selector/zone-selector.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '../../../../app/api/audio-zone.service';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from './zone-selector.component.css.shim';
import * as import12 from '../../../../app/shared/dropdown/dropdown.directive';
import * as import13 from '../../../../app/shared/dropdown/dropdown-toggle.directive';
import * as import14 from '@angular/common/src/directives/ng_for';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from '@angular/core/src/linker/template_ref';
import * as import17 from '@angular/core/src/change_detection/differs/iterable_differs';
var renderType_ZoneSelectorComponent_Host:import0.RenderComponentType = (null as any);
class _View_ZoneSelectorComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _ZoneSelectorComponent_0_4:import3.ZoneSelectorComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_ZoneSelectorComponent_Host0,renderType_ZoneSelectorComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('zone-selector',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_ZoneSelectorComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._ZoneSelectorComponent_0_4 = new import3.ZoneSelectorComponent(this.parentInjector.get(import8.AudioZoneService));
    this._appEl_0.initComponent(this._ZoneSelectorComponent_0_4,[],compView_0);
    compView_0.create(this._ZoneSelectorComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.ZoneSelectorComponent) && (0 === requestNodeIndex))) { return this._ZoneSelectorComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._ZoneSelectorComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_ZoneSelectorComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_ZoneSelectorComponent_Host === (null as any))) { (renderType_ZoneSelectorComponent_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,[],{})); }
  return new _View_ZoneSelectorComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const ZoneSelectorComponentNgFactory:import10.ComponentFactory<import3.ZoneSelectorComponent> = new import10.ComponentFactory<import3.ZoneSelectorComponent>('zone-selector',viewFactory_ZoneSelectorComponent_Host0,import3.ZoneSelectorComponent);
const styles_ZoneSelectorComponent:any[] = [import11.styles];
var renderType_ZoneSelectorComponent:import0.RenderComponentType = (null as any);
class _View_ZoneSelectorComponent0 extends import1.AppView<import3.ZoneSelectorComponent> {
  _el_0:any;
  _DropdownDirective_0_3:import12.DropdownDirective;
  _text_1:any;
  _el_2:any;
  _DropdownToggleDirective_2_3:import13.DropdownToggleDirective;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _anchor_9:any;
  /*private*/ _appEl_9:import2.AppElement;
  _TemplateRef_9_5:any;
  _NgFor_9_6:import14.NgFor;
  _text_10:any;
  _text_11:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_ZoneSelectorComponent0,renderType_ZoneSelectorComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','btn-group');
    this.renderer.setElementAttribute(this._el_0,'dropdown','');
    this._DropdownDirective_0_3 = new import12.DropdownDirective(new import15.ElementRef(this._el_0),this.ref);
    this._text_1 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._el_2 = this.renderer.createElement(this._el_0,'button',(null as any));
    this.renderer.setElementAttribute(this._el_2,'class','btn btn-primary btn-sm btn-block');
    this.renderer.setElementAttribute(this._el_2,'dropdownToggle','');
    this.renderer.setElementAttribute(this._el_2,'id','single-button');
    this.renderer.setElementAttribute(this._el_2,'type','button');
    this._DropdownToggleDirective_2_3 = new import13.DropdownToggleDirective(this._DropdownDirective_0_3,new import15.ElementRef(this._el_2));
    this._text_3 = this.renderer.createText(this._el_2,'',(null as any));
    this._el_4 = this.renderer.createElement(this._el_2,'span',(null as any));
    this.renderer.setElementAttribute(this._el_4,'class','caret');
    this._text_5 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_6 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._el_7 = this.renderer.createElement(this._el_0,'ul',(null as any));
    this.renderer.setElementAttribute(this._el_7,'aria-labelledby','single-button');
    this.renderer.setElementAttribute(this._el_7,'class','dropdown-menu');
    this.renderer.setElementAttribute(this._el_7,'role','menu');
    this._text_8 = this.renderer.createText(this._el_7,'\n		',(null as any));
    this._anchor_9 = this.renderer.createTemplateAnchor(this._el_7,(null as any));
    this._appEl_9 = new import2.AppElement(9,7,this,this._anchor_9);
    this._TemplateRef_9_5 = new import16.TemplateRef_(this._appEl_9,viewFactory_ZoneSelectorComponent1);
    this._NgFor_9_6 = new import14.NgFor(this._appEl_9.vcRef,this._TemplateRef_9_5,this.parentInjector.get(import17.IterableDiffers),this.ref);
    this._text_10 = this.renderer.createText(this._el_7,'\n	',(null as any));
    this._text_11 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_2,'click',this.eventHandler(this._handle_click_2_0.bind(this)));
    this._expr_4 = import7.UNINITIALIZED;
    this._expr_5 = import7.UNINITIALIZED;
    this._expr_6 = import7.UNINITIALIZED;
    this._expr_7 = import7.UNINITIALIZED;
    this._expr_8 = import7.UNINITIALIZED;
    this._expr_9 = import7.UNINITIALIZED;
    this.init([],[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._anchor_9,
      this._text_10,
      this._text_11
    ]
    ,[disposable_0],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.DropdownToggleDirective) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._DropdownToggleDirective_2_3; }
    if (((token === import16.TemplateRef) && (9 === requestNodeIndex))) { return this._TemplateRef_9_5; }
    if (((token === import14.NgFor) && (9 === requestNodeIndex))) { return this._NgFor_9_6; }
    if (((token === import12.DropdownDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._DropdownDirective_0_3; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._DropdownDirective_0_3.ngOnInit(); }
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._DropdownToggleDirective_2_3.ngOnInit(); }
    changes = (null as any);
    const currVal_9:any = this.context.zones;
    if (import4.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this._NgFor_9_6.ngForOf = currVal_9;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForOf'] = new import7.SimpleChange(this._expr_9,currVal_9);
      this._expr_9 = currVal_9;
    }
    if ((changes !== (null as any))) { this._NgFor_9_6.ngOnChanges(changes); }
    if (!throwOnChange) { this._NgFor_9_6.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this._DropdownDirective_0_3.isOpen;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementClass(this._el_0,'open',currVal_0);
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this._DropdownDirective_0_3.addClass;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementClass(this._el_0,'dropdown',currVal_1);
      this._expr_1 = currVal_1;
    }
    const currVal_3:any = this.context.disabled;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementProperty(this._el_2,'disabled',currVal_3);
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this._DropdownToggleDirective_2_3.isDisabled;
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementClass(this._el_2,'disabled',currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = this._DropdownToggleDirective_2_3.addToggleClass;
    if (import4.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setElementClass(this._el_2,'dropdown-toggle',currVal_5);
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this._DropdownToggleDirective_2_3.addClass;
    if (import4.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this.renderer.setElementAttribute(this._el_2,'aria-haspopup',((currVal_6 == (null as any))? (null as any): currVal_6.toString()));
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = this._DropdownToggleDirective_2_3.isOpen;
    if (import4.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setElementAttribute(this._el_2,'aria-expanded',((currVal_7 == (null as any))? (null as any): currVal_7.toString()));
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = import4.interpolate(1,'\n      ',this.context.getZoneName(this.context.activeZone),' ');
    if (import4.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setText(this._text_3,currVal_8);
      this._expr_8 = currVal_8;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._DropdownDirective_0_3.ngOnDestroy();
  }
  private _handle_click_2_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DropdownToggleDirective_2_3.toggleDropdown($event)) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_ZoneSelectorComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.ZoneSelectorComponent> {
  if ((renderType_ZoneSelectorComponent === (null as any))) { (renderType_ZoneSelectorComponent = viewUtils.createRenderComponentType('C:/data/solutions/PlayMeExtension/src/app/now-playing/zone-selector/zone-selector.component.html',0,import9.ViewEncapsulation.Emulated,styles_ZoneSelectorComponent,{})); }
  return new _View_ZoneSelectorComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_ZoneSelectorComponent1 extends import1.AppView<any> {
  _el_0:any;
  _el_1:any;
  _text_2:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_ZoneSelectorComponent1,renderType_ZoneSelectorComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'li',(null as any));
    this.renderer.setElementAttribute(this._el_0,'role','menuitem');
    this._el_1 = this.renderer.createElement(this._el_0,'a',(null as any));
    this.renderer.setElementAttribute(this._el_1,'class','dropdown-item');
    this._text_2 = this.renderer.createText(this._el_1,'',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_1,'click',this.eventHandler(this._handle_click_1_0.bind(this)));
    this._expr_1 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._el_1,
      this._text_2
    ]
    ,[disposable_0],[]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_1:any = import4.interpolate(1,'',this.context.$implicit.name,'');
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setText(this._text_2,currVal_1);
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_click_1_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>(this.parent.context.changeZone(this.context.$implicit.path) && false)) !== false);
    return (true && pd_0);
  }
}
function viewFactory_ZoneSelectorComponent1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_ZoneSelectorComponent1(viewUtils,parentInjector,declarationEl);
}