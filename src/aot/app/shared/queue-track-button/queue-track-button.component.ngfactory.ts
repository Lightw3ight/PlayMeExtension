/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from '../../../../app/shared/queue-track-button/queue-track-button.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '../../../../app/api/queue.service';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from './queue-track-button.component.css.shim';
import * as import12 from '@angular/common/src/directives/ng_class';
import * as import13 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import14 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import15 from '@angular/core/src/linker/element_ref';
var renderType_QueueTrackButtonComponent_Host:import0.RenderComponentType = (null as any);
class _View_QueueTrackButtonComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _QueueTrackButtonComponent_0_4:import3.QueueTrackButtonComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_QueueTrackButtonComponent_Host0,renderType_QueueTrackButtonComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('queue-track-button',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_QueueTrackButtonComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._QueueTrackButtonComponent_0_4 = new import3.QueueTrackButtonComponent(this.parentInjector.get(import8.QueueService));
    this._appEl_0.initComponent(this._QueueTrackButtonComponent_0_4,[],compView_0);
    compView_0.create(this._QueueTrackButtonComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.QueueTrackButtonComponent) && (0 === requestNodeIndex))) { return this._QueueTrackButtonComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._QueueTrackButtonComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_QueueTrackButtonComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_QueueTrackButtonComponent_Host === (null as any))) { (renderType_QueueTrackButtonComponent_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,[],{})); }
  return new _View_QueueTrackButtonComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const QueueTrackButtonComponentNgFactory:import10.ComponentFactory<import3.QueueTrackButtonComponent> = new import10.ComponentFactory<import3.QueueTrackButtonComponent>('queue-track-button',viewFactory_QueueTrackButtonComponent_Host0,import3.QueueTrackButtonComponent);
const styles_QueueTrackButtonComponent:any[] = [import11.styles];
var renderType_QueueTrackButtonComponent:import0.RenderComponentType = (null as any);
class _View_QueueTrackButtonComponent0 extends import1.AppView<import3.QueueTrackButtonComponent> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  _el_3:any;
  _NgClass_3_3:import12.NgClass;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _text_7:any;
  _text_8:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  _map_0:any;
  /*private*/ _expr_3:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_QueueTrackButtonComponent0,renderType_QueueTrackButtonComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','btn-group');
    this.renderer.setElementAttribute(this._el_0,'role','group');
    this._text_1 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._text_2 = this.renderer.createText(this._el_0,'\n	',(null as any));
    this._el_3 = this.renderer.createElement(this._el_0,'button',(null as any));
    this.renderer.setElementAttribute(this._el_3,'class','btn btn-default btn-icon');
    this.renderer.setElementAttribute(this._el_3,'title','Queue track');
    this._NgClass_3_3 = new import12.NgClass(this.parentInjector.get(import13.IterableDiffers),this.parentInjector.get(import14.KeyValueDiffers),new import15.ElementRef(this._el_3),this.renderer);
    this._text_4 = this.renderer.createText(this._el_3,'\n		',(null as any));
    this._el_5 = this.renderer.createElement(this._el_3,'i',(null as any));
    this.renderer.setElementAttribute(this._el_5,'class','icon-playlist-add');
    this._text_6 = this.renderer.createText(this._el_3,'\n	',(null as any));
    this._text_7 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_8 = this.renderer.createText(parentRenderNode,'\n\n',(null as any));
    this._expr_1 = import7.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_3,'click',this.eventHandler(this._handle_click_3_0.bind(this)));
    this._expr_2 = import7.UNINITIALIZED;
    this._map_0 = import4.pureProxy1((p0:any):{[key: string]:any} => {
      return {'btn-success': p0};
    });
    this._expr_3 = import7.UNINITIALIZED;
    this.init([],[
      this._el_0,
      this._text_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._text_8
    ]
    ,[disposable_0],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.NgClass) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._NgClass_3_3; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = 'btn btn-default btn-icon';
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this._NgClass_3_3.klass = currVal_2;
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = this._map_0(this.context.track.IsAlreadyQueued);
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this._NgClass_3_3.ngClass = currVal_3;
      this._expr_3 = currVal_3;
    }
    if (!throwOnChange) { this._NgClass_3_3.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_1:any = this.context.track.IsAlreadyQueued;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementProperty(this._el_3,'disabled',currVal_1);
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_click_3_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.queueTrack()) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_QueueTrackButtonComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.QueueTrackButtonComponent> {
  if ((renderType_QueueTrackButtonComponent === (null as any))) { (renderType_QueueTrackButtonComponent = viewUtils.createRenderComponentType('C:/data/solutions/PlayMeExtension/src/app/shared/queue-track-button/queue-track-button.component.html',0,import9.ViewEncapsulation.Emulated,styles_QueueTrackButtonComponent,{})); }
  return new _View_QueueTrackButtonComponent0(viewUtils,parentInjector,declarationEl);
}