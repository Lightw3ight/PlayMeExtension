/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from '../../../../app/shared/user-list/user-list.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from './user-list.component.css';
import * as import11 from '@angular/common/src/directives/ng_for';
import * as import12 from '@angular/core/src/linker/template_ref';
import * as import13 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import14 from '@angular/common/src/pipes/async_pipe';
var renderType_UserListComponent_Host:import0.RenderComponentType = (null as any);
class _View_UserListComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _UserListComponent_0_4:import3.UserListComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_UserListComponent_Host0,renderType_UserListComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('user-list',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_UserListComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._UserListComponent_0_4 = new import3.UserListComponent();
    this._appEl_0.initComponent(this._UserListComponent_0_4,[],compView_0);
    compView_0.create(this._UserListComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.UserListComponent) && (0 === requestNodeIndex))) { return this._UserListComponent_0_4; }
    return notFoundResult;
  }
}
function viewFactory_UserListComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_UserListComponent_Host === (null as any))) { (renderType_UserListComponent_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,[],{})); }
  return new _View_UserListComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const UserListComponentNgFactory:import9.ComponentFactory<import3.UserListComponent> = new import9.ComponentFactory<import3.UserListComponent>('user-list',viewFactory_UserListComponent_Host0,import3.UserListComponent);
const styles_UserListComponent:any[] = [import10.styles];
var renderType_UserListComponent:import0.RenderComponentType = (null as any);
class _View_UserListComponent0 extends import1.AppView<import3.UserListComponent> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _anchor_5:any;
  /*private*/ _appEl_5:import2.AppElement;
  _TemplateRef_5_5:any;
  _NgFor_5_6:import11.NgFor;
  _text_6:any;
  _text_7:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_UserListComponent0,renderType_UserListComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'h3',(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this._text_2 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_3 = this.renderer.createElement(parentRenderNode,'ul',(null as any));
    this.renderer.setElementAttribute(this._el_3,'class','list-unstyled');
    this._text_4 = this.renderer.createText(this._el_3,'\n	',(null as any));
    this._anchor_5 = this.renderer.createTemplateAnchor(this._el_3,(null as any));
    this._appEl_5 = new import2.AppElement(5,3,this,this._anchor_5);
    this._TemplateRef_5_5 = new import12.TemplateRef_(this._appEl_5,viewFactory_UserListComponent1);
    this._NgFor_5_6 = new import11.NgFor(this._appEl_5.vcRef,this._TemplateRef_5_5,this.parentInjector.get(import13.IterableDiffers),this.ref);
    this._text_6 = this.renderer.createText(this._el_3,'\n',(null as any));
    this._text_7 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this.init([],[
      this._el_0,
      this._text_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._anchor_5,
      this._text_6,
      this._text_7
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.TemplateRef) && (5 === requestNodeIndex))) { return this._TemplateRef_5_5; }
    if (((token === import11.NgFor) && (5 === requestNodeIndex))) { return this._NgFor_5_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_1:any = this.context.opinions;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._NgFor_5_6.ngForOf = currVal_1;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForOf'] = new import7.SimpleChange(this._expr_1,currVal_1);
      this._expr_1 = currVal_1;
    }
    if ((changes !== (null as any))) { this._NgFor_5_6.ngOnChanges(changes); }
    if (!throwOnChange) { this._NgFor_5_6.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = import4.interpolate(1,'',this.context.title,'');
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setText(this._text_1,currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_UserListComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.UserListComponent> {
  if ((renderType_UserListComponent === (null as any))) { (renderType_UserListComponent = viewUtils.createRenderComponentType('C:/data/solutions/PlayMeExtension/src/app/shared/user-list/user-list.component.html',0,import8.ViewEncapsulation.None,styles_UserListComponent,{})); }
  return new _View_UserListComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_UserListComponent1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _pipe_async_0:import14.AsyncPipe;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_UserListComponent1,renderType_UserListComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'li',(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this._pipe_async_0 = new import14.AsyncPipe(this.parent.ref);
    this._expr_0 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,[],[]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const valUnwrapper:any = new import7.ValueUnwrapper();
    this.detectContentChildrenChanges(throwOnChange);
    valUnwrapper.reset();
    const currVal_0:any = import4.interpolate(1,'',valUnwrapper.unwrap(this._pipe_async_0.transform(this.context.$implicit.fullName)),'');
    if ((valUnwrapper.hasWrappedValue || import4.checkBinding(throwOnChange,this._expr_0,currVal_0))) {
      this.renderer.setText(this._text_1,currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._pipe_async_0.ngOnDestroy();
  }
}
function viewFactory_UserListComponent1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_UserListComponent1(viewUtils,parentInjector,declarationEl);
}